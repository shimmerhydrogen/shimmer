cmake_minimum_required(VERSION 3.20)

project(SHMGERGUnitTest LANGUAGES CXX C)

find_package(Eigen3 REQUIRED)

## SHMGERG
if (NOT TARGET SHMGERG::SHMGERG)
	find_package(SHMGERG CONFIG REQUIRED)
	list(APPEND SHMGERG_LIBRARY_TEST_LINKED_LIBRARIES PRIVATE SHMGERG::SHMGERG)
else()
	get_target_property(SHMGERG_LIBRARY_HEADERS SHMGERG::SHMGERG PUBLIC_HEADER)
	get_target_property(SHMGERG_LIBRARY_NAME SHMGERG::SHMGERG EXPORT_NAME)
	get_target_property(SHMGERG_LIBRARY_LINKED_LIBRARIES SHMGERG::SHMGERG LINK_LIBRARIES)
	get_target_property(SHMGERG_LIBRARY_LINKED_DIRECTORIES SHMGERG::SHMGERG LINK_DIRECTORIES)
	get_target_property(SHMGERG_LIBRARY_INCLUDE_DIRECTORIES SHMGERG::SHMGERG INCLUDE_DIRECTORIES)
	get_target_property(SHMGERG_LIBRARY_SOURCES SHMGERG::SHMGERG SOURCES)

	list(APPEND SHMGERG_LIBRARY_TEST_LINKED_LIBRARIES PRIVATE ${SHMGERG_LIBRARY_NAME} ${SHMGERG_LIBRARY_LINKED_LIBRARIES})
	list(APPEND SHMGERG_LIBRARY_TEST_LINKED_DIRECTORIES PRIVATE ${SHMGERG_LIBRARY_LINKED_DIRECTORIES})
	list(APPEND SHMGERG_LIBRARY_TEST_HEADERS ${SHMGERG_LIBRARY_HEADERS})
	list(APPEND SHMGERG_LIBRARY_TEST_INCLUDE ${SHMGERG_LIBRARY_INCLUDE_DIRECTORIES})
	list(APPEND SHMGERG_LIBRARY_TEST_LINKED_LIBRARIES PRIVATE SHMGERG::SHMGERG)
endif()

# Insert Sources
###############################################################################################
list(APPEND SHMGERG_LIBRARY_TEST_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/main.cpp)

list(APPEND SHMGERG_LIBRARY_TEST_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/test_utilities.hpp)

list(APPEND SHMGERG_LIBRARY_TEST_TESTS ${CMAKE_CURRENT_SOURCE_DIR}/test_filter_collection.hpp)
list(APPEND SHMGERG_LIBRARY_TEST_TESTS ${CMAKE_CURRENT_SOURCE_DIR}/test_filter_components.hpp)
list(APPEND SHMGERG_LIBRARY_TEST_TESTS ${CMAKE_CURRENT_SOURCE_DIR}/test_reducing_parameters.hpp)
list(APPEND SHMGERG_LIBRARY_TEST_TESTS ${CMAKE_CURRENT_SOURCE_DIR}/test_pseudo_critical_point.hpp)
list(APPEND SHMGERG_LIBRARY_TEST_TESTS ${CMAKE_CURRENT_SOURCE_DIR}/test_gerg_mock.hpp)
list(APPEND SHMGERG_LIBRARY_TEST_TESTS ${CMAKE_CURRENT_SOURCE_DIR}/test_thermodynamic_properties.hpp)

# Create library test executable
###############################################################################################
add_executable(${PROJECT_NAME}
    ${SHMGERG_LIBRARY_TEST_SOURCES}
    ${SHMGERG_LIBRARY_TEST_HEADERS}
    ${SHMGERG_LIBRARY_TEST_TESTS}
)
target_link_libraries(${PROJECT_NAME} ${SHMGERG_LIBRARY_TEST_LINKED_LIBRARIES})
target_include_directories(${PROJECT_NAME} PRIVATE ${SHMGERG_LIBRARY_TEST_INCLUDE})
target_link_directories(${PROJECT_NAME} PRIVATE ${SHMGERG_LIBRARY_TEST_LINKED_DIRECTORIES})

set_target_properties(${PROJECT_NAME} PROPERTIES 
	LINKER_LANGUAGE CXX
    CXX_STANDARD 20
    CXX_STANDARD_REQUIRED ON
    CXX_EXTENSIONS OFF)

enable_testing()

foreach (test ${SHMGERG_LIBRARY_TEST_TESTS})
  get_filename_component(TName ${test} NAME_WE)
  add_test(NAME ${TName} COMMAND ${PROJECT_NAME} ${TName})
endforeach ()
