cmake_minimum_required(VERSION 3.20)

project(SHMTEQPUnitTest LANGUAGES CXX C)

# Set C++ Standard
###########################################################################################
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(Boost REQUIRED)
find_package(Eigen3 REQUIRED)
find_package(autodiff REQUIRED)
find_package(nlohmann_json_schema_validator REQUIRED)

## SHMTEQP
if (NOT TARGET SHMTEQP::SHMTEQP)
	find_package(SHMTEQP CONFIG REQUIRED)
	list(APPEND SHMTEQP_LIBRARY_TEST_LINKED_LIBRARIES PRIVATE SHMTEQP::SHMTEQP)
else()
	get_target_property(SHMTEQP_LIBRARY_HEADERS SHMTEQP::SHMTEQP PUBLIC_HEADER)
	get_target_property(SHMTEQP_LIBRARY_NAME SHMTEQP::SHMTEQP EXPORT_NAME)
	get_target_property(SHMTEQP_LIBRARY_LINKED_LIBRARIES SHMTEQP::SHMTEQP LINK_LIBRARIES)
	get_target_property(SHMTEQP_LIBRARY_LINKED_DIRECTORIES SHMTEQP::SHMTEQP LINK_DIRECTORIES)
	get_target_property(SHMTEQP_LIBRARY_INCLUDE_DIRECTORIES SHMTEQP::SHMTEQP INCLUDE_DIRECTORIES)
	get_target_property(SHMTEQP_LIBRARY_SOURCES SHMTEQP::SHMTEQP SOURCES)

	list(APPEND SHMTEQP_LIBRARY_TEST_LINKED_LIBRARIES PRIVATE ${SHMTEQP_LIBRARY_NAME} ${SHMTEQP_LIBRARY_LINKED_LIBRARIES})
	list(APPEND SHMTEQP_LIBRARY_TEST_LINKED_DIRECTORIES PRIVATE ${SHMTEQP_LIBRARY_LINKED_DIRECTORIES})
	list(APPEND SHMTEQP_LIBRARY_TEST_HEADERS ${SHMTEQP_LIBRARY_HEADERS})
	list(APPEND SHMTEQP_LIBRARY_TEST_INCLUDE ${SHMTEQP_LIBRARY_INCLUDE_DIRECTORIES})
	list(APPEND SHMTEQP_LIBRARY_TEST_LINKED_LIBRARIES PRIVATE SHMTEQP::SHMTEQP)
endif()

# Insert Sources
###############################################################################################
list(APPEND SHMTEQP_LIBRARY_TEST_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/main.cpp)

list(APPEND SHMTEQP_LIBRARY_TEST_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/test_utilities.hpp)

list(APPEND SHMTEQP_LIBRARY_TEST_TESTS ${CMAKE_CURRENT_SOURCE_DIR}/test_filter_collection.hpp)
list(APPEND SHMTEQP_LIBRARY_TEST_TESTS ${CMAKE_CURRENT_SOURCE_DIR}/test_filter_components.hpp)
list(APPEND SHMTEQP_LIBRARY_TEST_TESTS ${CMAKE_CURRENT_SOURCE_DIR}/test_reducing_parameters.hpp)
list(APPEND SHMTEQP_LIBRARY_TEST_TESTS ${CMAKE_CURRENT_SOURCE_DIR}/test_pseudo_critical_point.hpp)
list(APPEND SHMTEQP_LIBRARY_TEST_TESTS ${CMAKE_CURRENT_SOURCE_DIR}/test_gerg_mock.hpp)
list(APPEND SHMTEQP_LIBRARY_TEST_TESTS ${CMAKE_CURRENT_SOURCE_DIR}/test_thermodynamic_properties.hpp)

# Create library test executable
###############################################################################################
add_executable(${PROJECT_NAME}
    ${SHMTEQP_LIBRARY_TEST_SOURCES}
    ${SHMTEQP_LIBRARY_TEST_HEADERS}
    ${SHMTEQP_LIBRARY_TEST_TESTS}
)
target_link_libraries(${PROJECT_NAME} ${SHMTEQP_LIBRARY_TEST_LINKED_LIBRARIES})
target_include_directories(${PROJECT_NAME} PRIVATE ${SHMTEQP_LIBRARY_TEST_INCLUDE})
target_link_directories(${PROJECT_NAME} PRIVATE ${SHMTEQP_LIBRARY_TEST_LINKED_DIRECTORIES})

enable_testing()

foreach (test ${SHMTEQP_LIBRARY_TEST_TESTS})
  get_filename_component(TName ${test} NAME_WE)
  add_test(NAME ${TName} COMMAND ${PROJECT_NAME} ${TName})
endforeach ()
