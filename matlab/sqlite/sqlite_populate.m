clear;

% Open SQLite DB connection. This code assumes that the database is
% freshly created and empty (sqlite3 shimmer.db < shimmer.sql)
dbfile = fullfile(pwd, "../../sqlite/shimmer.db");

clear_database = 1; % Set to zero to NOT clear database on start

%% create db from schema
if ~exist(dbfile, 'file')
    clear_database = 0;
    db_schema = fullfile(pwd, "../../sqlite/shimmer.sql");

    sqlcreate(dbfile, db_schema);
end


%% delete db
if (clear_database == 1)
    conn = sqlite(dbfile, "connect");

    execute(conn, "delete from stations");
    execute(conn, "delete from limits_remi_wo");
    execute(conn, "delete from profiles_remi_wo");
    execute(conn, "delete from limits_injection_w");
    execute(conn, "delete from profiles_injection_w");
    execute(conn, "delete from limits_conspoint_wo");
    execute(conn, "delete from profiles_conspoint_wo");
    execute(conn, "delete from pipelines");
    execute(conn, "delete from pipe_parameters");

    close(conn);
end

%% fill db with data

conn = sqlite(dbfile, "connect");

station_types_tab = sqlread(conn, "station_types");

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Define stations. I am doing this using cells, but it can also be done
% using table() and specifiying column-oriented data.
% Here we are inserting s_number, s_name and t_type columns.
stations = { ...
     1, "s01_entry", 0; ...
     2, "s02_exit",  2; ...
     3, "s03_junct", 3; ...
     4, "s04_junct", 3; ...
     5, "s05_junct", 3; ...
     6, "s06_exit",  4; ...
     7, "s07_junct", 3; ...
     8, "s08_junct", 3; ...
     9, "s09_exit",  4; ...
    10, "s10_junct", 3; ...
    11, "s11_exit",  4; ...
    12, "s12_entry", 1; ...
    13, "s13_exit",  2 };

% Convert cell to a table
stations_tab = cell2table(stations, ...
    "VariableNames", ["s_number", "s_name", "t_type"] );

% Write the table to the SQL DB
sqlwrite(conn, "stations", stations_tab);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Define pipelines.
% Here we are inserting p_name, s_from, s_to and p_type columns.

pipelines = { ...
    "pipe01",  1,  4, 0; ...
    "pipe02",  2,  3, 0; ...
    "pipe03",  3,  4, 0; ...
    "pipe05",  4,  5, 0; ...
    "pipe04",  3,  5, 0; ...
    "pipe06",  5,  6, 0; ...
    "pipe07",  5, 14, 0; ...
    "pipe09",  8,  7, 0; ...
    "pipe08",  7,  5, 0; ...
    "pipe10", 12,  7, 0; ...
    "pipe11", 13,  8, 0; ...
    "pipe12",  9,  8, 0; ...
    "pipe13",  8, 10, 0; ...
    "pipe14", 10, 11, 0; ...
    "pipe15",  4, 10, 0; ...
    "pipe16", 14, 15, 2; ...
    "pipe17", 15, 18, 0 };

% Convert cell to a table
pipelines_tab = cell2table(pipelines, ...
    "VariableNames", ["p_name", "s_from", "s_to", "p_type"] );

% Write the table to the SQL DB
sqlwrite(conn, "pipelines", pipelines_tab);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Define pipe parameters.

pipe_parameters = { ...
    "pipe01",  1,  4, 1.2,  80000, 1.20e-5; ...
    "pipe02",  2,  3, 0.6,  16000, 1.20e-5; ...
    "pipe03",  3,  4, 0.8,  40000, 1.20e-5; ...
    "pipe04",  3,  5, 0.7, 160000, 1.20e-5; ...
    "pipe05",  4,  5, 0.8, 200000, 1.20e-5; ...
    "pipe06",  5,  6, 0.6,  24000, 1.20e-5; ...
    "pipe07",  5, 14, 0.2,  60000, 1.20e-5; ...
    "pipe08",  7,  5, 0.9,  80000, 1.20e-5; ...
    "pipe09",  8,  7, 0.7,  64000, 1.20e-5; ...
    "pipe10", 12,  7, 0.6, 240000, 1.20e-5; ...
    "pipe11", 13,  8, 0.2,  28000, 1.20e-5; ...
    "pipe12",  9,  8, 0.9,  80000, 1.20e-5; ...
    "pipe13",  8, 10, 0.7, 160000, 1.20e-5; ...
    "pipe14", 10, 11, 0.3,  40000, 1.20e-5; ...
    "pipe15",  4, 10, 0.9, 320000, 1.20e-5; ...
    "pipe17", 15, 18, 0.2,  60000, 1.20e-5 };

% Convert cell to a table
pipe_parameters_tab = cell2table(pipe_parameters, ...
    "VariableNames", ["p_name", "s_from", "s_to", "diameter", "length", "roughness"] );

% Write the table to the SQL DB
sqlwrite(conn, "pipe_parameters", pipe_parameters_tab);

close(conn);

